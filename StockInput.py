from tkinter import *
from tkinter import messagebox
from mysql.connector import connect,errors
from datetime import datetime

class StockInput:
    def D_stockinput(self,stknpW):
        def opendb():
            try:
                global connection
                connection = connect(host="localhost",user="root",password="Kishore@2000",database="Project1")
                global mycursor
                mycursor = connection.cursor()
                print("Project1 Database Connected")
                crtetbl_query =  """
                CREATE TABLE IF NOT EXISTS Stock_input(
                    TRANSACTION_ID INT AUTO_INCREMENT Primary Key NOT NULL,
                    ITEM_CODE varchar(5), 
                    DATE_AND_TIME DATETIME, 
                    ITEM_QUANTITY INT, 
                    ITEM_MRP FLOAT DEFAULT 0
                )
                """
                mycursor.execute(crtetbl_query)
            except errors.Error as e:
                messagebox.showinfo("Error",e)

        stknpW.title("Stock Input")
        stknpW.state("zoomed")
        stknpW.configure(bg="Antique white")
        #stknpW.grab_set()
        hdframe = Frame(stknpW, bg="White", height=100, width=100)
        hdframe.place(x=650, y=50)
        hdlbl = Label(hdframe, text="STOCK INPUT", font=("Lato Regular", 30), fg="#3C1414", bg="Antique White")
        hdlbl.pack()

        screen_width = stknpW.winfo_screenwidth()
        screen_height = stknpW.winfo_screenheight()
        frame_width = 900
        frame_height = 500
        x = (screen_width - frame_width) // 2
        y = (screen_height - frame_height) // 2

        cenframe = Frame(stknpW, bg="#EDC9AF", width=frame_width, height=frame_height, highlightbackground="#3C1414",highlightthickness=2)
        cenframe.place(x=x, y=y)

        transid = Label(cenframe, text="TRANSACTION ID   :", font=("Lato Regular", 15), fg="#3C1414", bg="#EDC9AF")
        transid.place(x=70, y=80)
        transidentry = Entry(cenframe, font=("Lato Regular", 15), fg="#3C1414", bg="White",width=32,state="disabled")
        transidentry.place(x=370, y=80)
        transidentry.config(state="normal")
        transidentry.delete(0, 'end')
        transidentry.insert(0, "Auto Generated by System")
        transidentry.config(state="disabled")

        itcd=Label(cenframe,text="ITEM CODE            :",font=("Lato Regular",15),fg="#3C1414",bg="#EDC9AF")
        itcd.place(x=70,y=125)
        def validate(P):
            if len(P) <= 5:
                return True
            else:
                return False
        vcmd1 = (stknpW.register(validate), '%P')
        itcdentry=Entry(cenframe,font=("Lato Regular",15),fg="#3C1414",bg="White",width=32,validate="key",validatecommand=vcmd1)
        itcdentry.place(x=370,y=125)

        itmnamelbl = Label(cenframe, text="ITEM NAME            :", font=("Lato Regular", 15), fg="#3C1414", bg="#EDC9AF")
        itmnamelbl.place(x=70, y=170)
        def allowonlyalpha(char):
            return char == "" or all(char.isalpha() or char.isspace() for char in char)
        vcmd2 = (stknpW.register(allowonlyalpha), '%S')
        itmnameentry = Entry(cenframe, font=("Lato Regular", 15), fg="#3C1414", bg="White",width=32,validate="key",validatecommand=vcmd2)
        itmnameentry.place(x=370, y=170)
        itmnameentry.config(state="disabled")

        itemmrp=Label(cenframe,text="ITEM MRP              :",font=("Lato Regular",15),fg="#3C1414",bg="#EDC9AF")
        itemmrp.place(x=70,y=215)
        def allowonlynum(P):
            if P == "" or P.replace(".", "", 1).isdigit() and len(P) <= 9:
                return True
            return False
        vcmd3 = (stknpW.register(allowonlynum), '%P')
        itemmrpentry=Entry(cenframe,font=("Lato Regular",15),fg="#3C1414",bg="White",width=32,validate="key",validatecommand=vcmd3)
        itemmrpentry.place(x=370,y=215)
        itemmrpentry.config(state="disabled")

        itmdatelbl = Label(cenframe, text="DATE AND TIME     :", font=("Lato Regular", 15), fg="#3C1414", bg="#EDC9AF")
        itmdatelbl.place(x=70, y=260)
        itmdateentry = Entry(cenframe, font=("Lato Regular", 15), fg="#3C1414", bg="White",width=32)
        itmdateentry.place(x=370, y=260)
        itmdateentry.insert(0,datetime.now().strftime("%d/%m/%Y"))
        itmdateentry.config(state="disabled")

        itnqnty=Label(cenframe,text="ITEM QUANTITY     :",font=("Lato Regular",15),fg="#3C1414",bg="#EDC9AF")
        itnqnty.place(x=70,y=305)
        def validate(value):
            return value.isdigit() or value == ""
        vcmd5 = (stknpW.register(validate), '%P')
        itnqntyentry=Entry(cenframe,font=("Lato Regular",15),fg="#3C1414",bg="White",width=32,validate="key",validatecommand=vcmd5)
        itnqntyentry.place(x=370,y=305)

        purprc=Label(cenframe,text="PURCHASE PRICE  :",font=("Lato Regular",15),fg="#3C1414",bg="#EDC9AF")
        purprc.place(x=70,y=350)
        def allowonlynum(P):
            if P == "" or P.replace(".", "", 1).isdigit() and len(P) <= 9:
                return True
            return False
        vcmd6 = (stknpW.register(allowonlynum), '%P')
        purprcentry=Entry(cenframe,font=("Lato Regular",15),fg="#3C1414",bg="White",width=32,validate="key",validatecommand=vcmd6)
        purprcentry.place(x=370,y=350)

        def sv():
            if len(itcdentry.get()) > 0:
                if len(itcdentry.get()) == 5:
                    if len(itmnameentry.get()) > 0:
                        if len(itemmrpentry.get()) > 0:
                            if len(itnqntyentry.get()) > 0 and int(itnqntyentry.get()) > 0:
                                if len(purprcentry.get()) > 0:
                                    opendb()
                                    srch_query = "SELECT count(*) FROM Inventory WHERE ITEM_CODE = %s"
                                    mycursor.execute(srch_query, (itcdentry.get(),))
                                    counterbuf = mycursor.fetchone()
                                    if counterbuf[0] == 1:
                                        itmcode = itcdentry.get()
                                        itmname = itmnameentry.get()
                                        mrp = purprcentry.get()
                                        srch_query = "SELECT count(*) FROM Stock_input WHERE ITEM_CODE = %s"
                                        mycursor.execute(srch_query, (itmcode,))
                                        counterbuf = mycursor.fetchone()
                                        if counterbuf[0] == 0:
                                            insert_query = "insert into stock_input(ITEM_CODE,DATE_AND_TIME,ITEM_QUANTITY,ITEM_MRP) values(%s,%s,%s,%s)"
                                            mycursor.execute(insert_query,(itmcode, datetime.now(), itnqntyentry.get(), mrp))
                                            connection.commit()
                                            mycursor.close()
                                            connection.close()
                                            print("project1 DataBase Closed")
                                            itmnameentry.config(state="normal")
                                            itemmrpentry.config(state="normal")
                                            itcdentry.delete(0, END)
                                            itmnameentry.delete(0, END)
                                            itemmrpentry.delete(0, END)
                                            itnqntyentry.delete(0, END)
                                            purprcentry.delete(0, END)
                                            itmnameentry.config(state="disabled")
                                            itemmrpentry.config(state="disabled")
                                            messagebox.showinfo("Success", "Stock Input Added Successfully")
                                        else:
                                            itcdentry.delete(0, END)
                                            messagebox.showinfo("Error", "Item Code already exists")
                                            return
                                    else:
                                        itcdentry.delete(0, END)
                                        itnqntyentry.delete(0, END)
                                        purprcentry.delete(0, END)
                                        messagebox.showinfo("Error", "cannot add the item code as it is not present in Inventory. Add the item code to Inventory  first.")
                                        return
                                else:
                                     messagebox.showinfo("Error", "Purchase Price is required")
                                     return
                            else:
                                messagebox.showinfo("Error","Item Quantity is required")
                        else:
                            messagebox.showinfo("Error","MRP is required")
                            return
                    else:
                        messagebox.showinfo("Error","Item Name is required")
                        return
                else:
                    messagebox.showinfo("Error","Item Code must be 5 characters long")
            else:
                messagebox.showinfo("Error","Item Code is required")
                return
        savebtn = Button(cenframe, text="ADD", font=("Lato Regular", 15), fg="#3C1414", bg="Antique White", width=7,height=1,command=sv )
        savebtn.place(x=70, y=415)

        def edt():
            if len(itcdentry.get()) > 0:
                if len(itcdentry.get()) == 5:
                    if len(itmnameentry.get()) > 0:
                        if len(itemmrpentry.get()) > 0:
                            if len(itnqntyentry.get()) > 0 and int(itnqntyentry.get()) > 0:
                                if len(purprcentry.get()) > 0:
                                    opendb()
                                    itmcode = itcdentry.get()
                                    itmname = itmnameentry.get()
                                    mrp = itemmrpentry.get()
                                    qnty = itnqntyentry.get()
                                    prc = purprcentry.get()
                                    srch_query = "SELECT count(*) FROM Stock_input WHERE ITEM_CODE = %s"
                                    mycursor.execute(srch_query, (itmcode,))
                                    counterbuf = mycursor.fetchone()
                                    if counterbuf[0] == 1:
                                        editqry = "UPDATE Stock_input SET ITEM_QUANTITY = %s, ITEM_MRP = %s WHERE ITEM_CODE = %s"
                                        mycursor.execute(editqry, (qnty, prc, itmcode))
                                        itmnameentry.config(state="normal")
                                        itemmrpentry.config(state="normal")
                                        itcdentry.delete(0, END)
                                        itmnameentry.delete(0, END)
                                        itemmrpentry.delete(0, END)
                                        itnqntyentry.delete(0, END)
                                        purprcentry.delete(0, END)
                                        itmnameentry.config(state="disabled")
                                        itemmrpentry.config(state="disabled")

                                        srch_query2 = "SELECT COUNT(*) FROM Salessub WHERE ITEM_CODE = %s"
                                        mycursor.execute(srch_query2, (itmcode,))
                                        counterbuf2 = mycursor.fetchone()
                                        if counterbuf2[0] == 1:
                                            editqry2 = "UPDATE Salessub SET QUANTITY_REMAINING = %s WHERE ITEM_CODE = %s"
                                            mycursor.execute(editqry2, (qnty, itmcode))
                                            connection.commit()
                                            mycursor.close()
                                            connection.close()
                                            print("project1 DataBase Closed")
                                            messagebox.showinfo("Success", "Stock Input Updated Successfully")
                                        else:
                                            connection.commit()
                                            mycursor.close()
                                            connection.close()
                                    else:
                                        itcdentry.delete(0, END)
                                        messagebox.showinfo("Error", "Item Code needs exists to edit")
                                        return
                                else:
                                     messagebox.showinfo("Error", "Purchase Price is required")
                                     return
                            else:
                                messagebox.showinfo("Error","Item Quantity is required")
                        else:
                            messagebox.showinfo("Error","MRP is required")
                            return
                    else:
                        messagebox.showinfo("Error","Item Name is required")
                        return
                else:
                    messagebox.showinfo("Error","Item Code must be 5 characters long")
            else:
                messagebox.showinfo("Error","Item Code is required")
                return

        editbtn=Button(cenframe,text="EDIT",font=("Lato Regular",15),fg="#3C1414",bg="Antique White",width=7,height=1,command=edt)
        editbtn.place(x = 260,y=415)

        def fnd():
            opendb()
            cntqry=f"SELECT count(*) FROM inventory WHERE ITEM_CODE='{itcdentry.get()}'"
            mycursor.execute(cntqry)
            cnt=mycursor.fetchone()
            if cnt[0]==1:
                itmnameentry.config(state="normal")
                itemmrpentry.config(state="normal")
                fndqry=f"SELECT * FROM inventory WHERE ITEM_CODE='{itcdentry.get()}'"
                mycursor.execute(fndqry)
                data=mycursor.fetchone()
                transidentry.delete(0,END)
                itcdentry.insert(0,data[0])
                itmnameentry.delete(0,END)
                itmnameentry.insert(0,data[1])
                itemmrpentry.delete(0,END)
                itemmrpentry.insert(0,data[2])
                mycursor.close()
                connection.close()
                itmnameentry.config(state="disabled")
                itemmrpentry.config(state="disabled")
                print("project1 DataBase Closed")
            else:
                messagebox.showinfo("Error","ITEM CODE NOT FOUND")
                return
        findbtb=Button(cenframe,text="FIND",font=("Lato Regular",15),fg="#3C1414",bg="Antique White",width=5,height=0,command=fnd)
        findbtb.place(x=750,y=120)

        def delete():
            if len(itcdentry.get()) > 0:
                if len(itcdentry.get()) == 5:
                    opendb()
                    itmcode = itcdentry.get()
                    srch_query = "SELECT count(*) FROM Stock_input WHERE ITEM_CODE = %s"
                    mycursor.execute(srch_query, (itmcode,))
                    counterbuf = mycursor.fetchone()
                    if counterbuf[0] == 1:
                        delqry = "DELETE FROM Stock_input WHERE ITEM_CODE = %s"
                        mycursor.execute(delqry, (itmcode,))
                        print("Data Deleted")
                        itmnameentry.config(state="normal")
                        itemmrpentry.config(state="normal")
                        itcdentry.delete(0, END)
                        itmnameentry.delete(0, END)
                        itemmrpentry.delete(0, END)
                        itnqntyentry.delete(0, END)
                        purprcentry.delete(0, END)
                        itmnameentry.config(state="disabled")
                        itemmrpentry.config(state="disabled")
                        mycursor.close()
                        connection.commit()
                        connection.close()
                        print("project1 DataBase Closed")
                        messagebox.showinfo("Success", "Deleted Successfully")
                    else:
                        messagebox.showinfo("Error", "Item Code does not exist")
                        return
                else:
                    messagebox.showinfo("Error", "Item Code must be 5 characters long")
                    return
            else:
                messagebox.showinfo("Error", "Item Code is required")
                return
        delbyn=Button(cenframe,text="DELETE",font=("Lato Regular",15),fg="#3C1414",bg="Antique White",width=7,height=1,command=delete)
        delbyn.place(x=440,y=415)

        def clr():
            itmnameentry.config(state="normal")
            itemmrpentry.config(state="normal")
            itcdentry.delete(0, END)
            itmnameentry.delete(0, END)
            itemmrpentry.delete(0, END)
            itmdateentry.delete(0, END)
            itnqntyentry.delete(0, END)
            purprcentry.delete(0, END)
            itmnameentry.config(state="disabled")
            itemmrpentry.config(state="disabled")
        clrbtn=Button(cenframe,text="CLEAR",font=("Lato Regular",15),fg="#3C1414",bg="Antique White",width=7,height=1,command=clr)
        clrbtn.place(x=635,y=415)


        def viewdb():
            viewdbwin=Toplevel()
            viewdbwin.title("View Database")
            viewdbwin.state('zoomed')
            #viewdbwin.grab_set()
            viewdbwin.configure(bg="Antique White")
            swhdframe=Frame(viewdbwin,bg="Antique White",height=100,width=100)
            swhdframe.place(x=500,y=50)
            hdlbl1=Label(swhdframe,text="INVENTORY DATABASE",font=("Lato Regular",30),fg="#3C1414",bg="Antique White")
            hdlbl1.pack()

            screen_width1 = viewdbwin.winfo_screenwidth()
            screen_height1 = viewdbwin.winfo_screenheight()

            frame_width1 = 1200
            frame_height1 = 500

            x1 = (screen_width1 - frame_width1) // 2
            y1= (screen_height1 - frame_height1) // 2

            swcenframe = Frame(viewdbwin, bg="#EDC9AF", width=frame_width1, height=frame_height1, highlightbackground="#3C1414",highlightthickness=2)
            swcenframe.place(x=x1, y=y1)

            txtfld=Text(swcenframe,font=("Lato Regular",20),fg="#3C1414",bg="White",width=78,height=15.49)
            txtfld.place(x=10,y=5)
            scrollb = Scrollbar(swcenframe, orient="vertical", command=txtfld.yview)
            scrollb.place(x=1163, y=6, height=481, width=20)
            txtfld.configure(yscrollcommand=scrollb.set)
            txtfld.config(state="disabled")

            def showtransacdb():
                try:
                    opendb()
                    txtfld.config(state="normal")
                    txtfld.delete("1.0", END)
                    txtfld.insert(END,"TRANSID\t\t ITEM CODE \t\t DATE/TIME \t\t ITEM QUAN \t\t PUR_PRICE\n")
                    txtfld.insert(END, "-" * 125 + "\n")
                    selquery = "SELECT * FROM Stock_input"
                    mycursor.execute(selquery)
                    data=mycursor.fetchall()
                    for i in data:

                        txtfld.insert(END, f"{i[0]} \t\t {i[1]} \t\t {datetime.strptime(str(i[2]),"%Y-%m-%d %H:%M:%S").strftime("%Y-%m-%d %H:%M")} \t\t {i[3]} \t\t {i[4]} \n")

                    txtfld.config(state="disabled")

                except errors.Error as e1:
                    messagebox.showinfo("Error",e1)
            showtransacdb()

            rfshbtn=Button(viewdbwin,text="Refesh",font=("Lato Regular",20),fg="Antique White",bg="#3C1414",command=showtransacdb)
            rfshbtn.place(x=166,y=700)
            closebtn1=Button(viewdbwin,text="CLOSE",font=("Lato Regular",20),fg="Antique White",bg="#3C1414",command=viewdbwin.destroy)
            closebtn1.place(x=1250, y=700)
        viewdb = Button(stknpW, text="VIEW ALL ITEMS", font=("Lato Regular", 20), fg="Antique White", bg="#3C1414",width=15, height=1,command=viewdb)
        viewdb.place(x=316, y=700)
        closebtn = Button(stknpW, text="QUIT", font=("Lato Regular", 20), fg="Antique White", bg="#3C1414",command=stknpW.destroy)
        closebtn.place(x=1128, y=700)

        stknpW.mainloop()
Class=StockInput()